@model Restaurant.Models.Dish
@{ ViewBag.Title = "Изменить стол";}
@using (Html.BeginForm())
{
    var IsShowList = new SelectList(
            new List<SelectListItem>
            {
                new SelectListItem {Text = "Да", Value = "true"},
                new SelectListItem {Text = "Нет", Value = "false"},
                                                },
            "Value", "Text");
    <h3>Изменить блюдо</h3>
    <div class="form-row">
        <div class="form-group">
            @Html.LabelFor(Model => Model.Name, "Введите название")
            @Html.TextBoxFor(Model => Model.Name, new { @class = "form-control" })
            @Html.ValidationMessageFor(Model => Model.Name, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(Model => Model.Price, "Введите цену")
        @Html.TextBoxFor(Model => Model.Price, new { @class = "form-control" })
        @Html.ValidationMessageFor(Model => Model.Price, "", new { @class = "text-danger" })
    </div>
    <div class="form-group">
        @Html.LabelFor(Model => Model.Description, "Введите описание")
        @Html.TextAreaFor(Model => Model.Description, new { @class = "form-control" })
        @Html.ValidationMessageFor(Model => Model.Description, "", new { @class = "text-danger" })
    </div>
    <div class="form-group">
        @Html.LabelFor(Model => Model.IsShow, "Доступно для заказа")
        @Html.DropDownListFor(Model => Model.IsShow, (IEnumerable<SelectListItem>)IsShowList, new { @class = "form-control", @id = "IsActive" })
        @Html.ValidationMessageFor(Model => Model.IsShow, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        <button class="btn btn-success mb-2" type="submit" name="editDish">Изменить</button>
    </div>
}



